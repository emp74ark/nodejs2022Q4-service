generator client {
  provider = "prisma-client-js"
}

datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @database.Uuid
  login     String   @unique
  password  String
  version   Int      @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id          String     @id @default(uuid()) @database.Uuid
  name        String
  grammy      Boolean
  Track       Track[]
  Album       Album[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @database.Uuid
}

model Track {
  id          String     @id @default(uuid()) @database.Uuid
  name        String
  artistId    String     @database.Uuid
  artist      Artist     @relation(fields: [artistId], references: [id])
  albumId     String     @database.Uuid
  album       Album      @relation(fields: [albumId], references: [id])
  duration    Int
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @database.Uuid
}

model Album {
  id          String     @id @default(uuid()) @database.Uuid
  name        String
  year        Int
  artistId    String     @database.Uuid
  artist      Artist     @relation(fields: [artistId], references: [id])
  Track       Track[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @database.Uuid
}

model Favorites {
  id      String   @id @default(uuid()) @database.Uuid
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
